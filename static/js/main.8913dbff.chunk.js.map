{"version":3,"sources":["serviceWorker.js","AppBar.js","components/CurrencyInput.js","utils.js","App.js","parser.js","index.js"],"names":["Boolean","window","location","hostname","match","ButtonAppBar","header","style","backgroundColor","CurrencyInput","name","id","value","changed","suffix","disabled","className","thousandSeparator","onValueChange","values","floatValue","toDecimal","val","toFixed","Math","max","calcPricePerSQM","price","sqm","calcGrandTotalBuying","commissionPct","buycostPct","res","parseFloat","calcInterestPerMonthAmt","totalCredit","interestPct","calcRepaymentPerMonthAmt","repayPct","injectIntl","props","INTL","intl","useLocation","useState","setPrice","provision","setProvision","buyingcosts","setBuyingcosts","interest","setInterest","repayment","setRepayment","condoFee","setCondoFee","rentIndex","setRentIndex","rent","setRent","livingSpace","setLivingSpace","useEffect","params","qs","parse","search","ignoreQueryPrefix","hasOwnProperty","console","log","url","is","formatCurrency","formatNumber","currency","Fragment","AppBar","noValidate","autoComplete","onSubmit","e","preventDefault","htmlFor","costs","calcCommissionAmt","getCommissionCostsFormatted","calcBuycostsAmt","getBuyingCostsFormatted","legend","label","icon","onClick","wantedRent","round","href","target","src","alt","marginLeft","fontSize","addLocaleData","de","ReactDOM","render","locale","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8913dbff.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport { Panel } from \"primereact/panel\";\n\nconst ButtonAppBar = () => {\n  return (\n    <Panel\n      header=\"RIK - Robs Immo Kalkulation\"\n      style={{ backgroundColor: \"#007bff\" }}\n    />\n  );\n};\n\nexport default ButtonAppBar;\n","import React from \"react\";\nimport NumberFormat from \"react-number-format\";\n\nconst CurrencyInput = ({\n\tname = \"\",\n\tid = \"\",\n\tvalue = 0,\n\tchanged = null,\n\tsuffix = \"€\",\n\tdisabled = false\n}) => {\n\treturn (\n\t\t<NumberFormat\n\t\t\tclassName=\"p-inputtext p-component p-inputnumber-input p-filled\"\n\t\t\tname={name}\n\t\t\tid={id}\n\t\t\tvalue={value}\n\t\t\tthousandSeparator={true}\n\t\t\tsuffix={suffix}\n\t\t\tdisabled={changed == null}\n\t\t\tonValueChange={values => {\n\t\t\t\tconst { floatValue } = values;\n\t\t\t\tchanged && changed(floatValue);\n\t\t\t}}\n\t\t/>\n\t);\n};\n\nexport default CurrencyInput;\n","/**\n * Number.prototype.format(n, x, s, c)\n *\n * @param integer n: length of decimal\n * @param integer x: length of whole part\n * @param mixed   s: sections delimiter\n * @param mixed   c: decimal delimiter\n */\nexport const formatMoney = (a, n, x, s, c) => {\n\tvar re = \"\\\\d(?=(\\\\d{\" + (x || 3) + \"})+\" + (n > 0 ? \"\\\\D\" : \"$\") + \")\",\n\t\tnum = a.toFixed(Math.max(0, ~~n));\n\n\treturn (c ? num.replace(\".\", c) : num).replace(\n\t\tnew RegExp(re, \"g\"),\n\t\t\"$&\" + (s || \",\")\n\t);\n};\n\nexport const str2Float = stringValue =>\n\tparseFloat(stringValue.replace(/[^\\d]+/, \"\"));\n\nexport const formatNumber = n => {\n\t// format number 1000000 to 1,234,567\n\treturn n.replace(/\\D/g, \"\").replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n};\n\nexport const toDecimal = val => val.toFixed(Math.max(0, ~~2));\n\nexport const calcPricePerSQM = (price = 0, sqm = 0) => {\n\treturn toDecimal(price / sqm);\n};\n\nexport const calcCommissionAmt = (price = 0, commissionPct = 0) => {\n\tlet res = parseFloat(0);\n\n\tif (commissionPct > 0) {\n\t\tres = price * (commissionPct / 100);\n\t}\n\n\treturn toDecimal(res);\n};\n\nexport const calcBuycostsAmt = (price = 0, buycostPct = 0) => {\n\tlet res = parseFloat(0);\n\n\tif (buycostPct > 0) {\n\t\tres = price * (buycostPct / 100);\n\t}\n\n\treturn toDecimal(res);\n};\n\nexport const calcGrandTotalBuying = (\n\tprice = 0,\n\tcommissionPct = 0,\n\tbuycostPct = 0\n) => {\n\tlet res = parseFloat(price);\n\tif (commissionPct > 0) {\n\t\tres = res + res * (commissionPct / 100);\n\t}\n\tif (buycostPct > 0) {\n\t\tres = res + res * (buycostPct / 100);\n\t}\n\n\treturn toDecimal(res);\n};\n\nexport const calcInterestPerMonthAmt = (totalCredit = 0, interestPct = 0) =>\n\tparseFloat((totalCredit * interestPct) / 100 / 12);\nexport const calcRepaymentPerMonthAmt = (totalCredit = 0, repayPct = 0) =>\n\tparseFloat((totalCredit * repayPct) / 100 / 12);\n","import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport AppBar from \"./AppBar\";\nimport { injectIntl } from \"react-intl\";\nimport { Fieldset } from \"primereact/fieldset\";\nimport { Button } from \"primereact/button\";\nimport { useLocation } from \"react-router-dom\";\nimport qs from \"qs\";\nimport { parseImmoScout } from \"./parser\";\nimport CurrencyInput from \"./components/CurrencyInput\";\nimport {\n  calcPricePerSQM,\n  calcGrandTotalBuying,\n  calcCommissionAmt,\n  calcBuycostsAmt,\n  calcInterestPerMonthAmt,\n  calcRepaymentPerMonthAmt\n} from \"./utils\";\n\nconst App = props => {\n  const INTL = props.intl;\n  let location = useLocation();\n  const [price, setPrice] = useState(0);\n  const [provision, setProvision] = useState(0.0);\n  const [buyingcosts, setBuyingcosts] = useState(6.5);\n  const [interest, setInterest] = useState(1.2); // Zins\n  const [repayment, setRepayment] = useState(2); // Tilgung\n  const [condoFee, setCondoFee] = useState(0.0); // Hausgeld\n  const [rentIndex, setRentIndex] = useState(0.0); // Mietspiegel\n  const [rent, setRent] = useState(0.0); // Mieteinnahmen\n  const [livingSpace, setLivingSpace] = useState(0); // Wohnflaeche\n\n  useEffect(() => {\n    if (location) {\n      const params = qs.parse(location.search, { ignoreQueryPrefix: true });\n      if (params && params.hasOwnProperty(\"is\")) {\n        // get immoscout url\n        console.log(parseImmoScout(params.is));\n      }\n    }\n  }, [location]);\n\n  const getBuyingCostsFormatted = () => {\n    const costs = calcBuycostsAmt(price, buyingcosts);\n    return formatCurrency(costs);\n  };\n\n  const getCommissionCostsFormatted = () => {\n    const costs = calcCommissionAmt(price, provision);\n    return formatCurrency(costs);\n  };\n\n  const formatCurrency = value =>\n    INTL.formatNumber(value, {\n      style: \"currency\",\n      currency: \"EUR\"\n    });\n\n  const calcRendite = () => {\n    return ((rent * 12 * 100) / parseFloat(price)).toFixed(2);\n  };\n\n  const proposeRent = () => {\n    let wantedRent = (parseFloat(price) * 6) / 100 / 12;\n    if (condoFee > 0) {\n      wantedRent += condoFee;\n    }\n    setRent(Math.round(wantedRent));\n    setRentIndex(livingSpace ? Math.round(wantedRent / livingSpace) : 0);\n  };\n\n  return (\n    <React.Fragment>\n      <AppBar />\n      <form\n        noValidate\n        autoComplete=\"off\"\n        className=\"p-m-4\"\n        onSubmit={e => e.preventDefault()}\n      >\n        <div className=\"p-fluid p-formgrid p-grid\">\n          <div className=\"p-field p-col-12 p-md-3 p-grid\">\n            <label htmlFor=\"fprice\">Kaufpreis</label>\n            <CurrencyInput\n              id=\"fprice\"\n              value={price}\n              changed={setPrice}\n              name=\"fprice\"\n            />\n            <small id=\"fbuyingcosts-help\" className=\"p-d-block\">\n              &nbsp;\n            </small>\n          </div>\n          <div className=\"p-field p-col-12 p-md-3 p-grid\">\n            <label htmlFor=\"fprovision\">Maklerprovision</label>\n            <CurrencyInput\n              id=\"fprovision\"\n              name=\"fprovision\"\n              value={provision}\n              changed={setProvision}\n              suffix=\"%\"\n            />\n            <small id=\"fprovision-help\" className=\"p-d-block\">\n              {getCommissionCostsFormatted()}\n            </small>\n          </div>\n          <div className=\"p-field p-col-12 p-md-3 p-grid\">\n            <label htmlFor=\"fbuyingcosts\">Kaufnebenkosten</label>\n            <CurrencyInput\n              id=\"fbuyingcosts\"\n              name=\"fbuyingcosts\"\n              value={buyingcosts}\n              changed={setBuyingcosts}\n              suffix=\"%\"\n            />\n            <small id=\"fbuyingcosts-help\" className=\"p-d-block\">\n              {getBuyingCostsFormatted()}\n            </small>\n          </div>\n          <div className=\"p-field p-col-12 p-md-3 p-grid\">\n            <label htmlFor=\"finterest\">Zins p.a.</label>\n            <CurrencyInput\n              id=\"finterest\"\n              name=\"finterest\"\n              value={interest}\n              changed={setInterest}\n              suffix=\"%\"\n            />\n            <small id=\"fbuyingcosts-help\" className=\"p-d-block\">\n              &nbsp;\n            </small>\n          </div>\n          <div className=\"p-field p-col-12 p-md-3 p-grid\">\n            <label htmlFor=\"frepayment\">Tilgung p.a.</label>\n            <CurrencyInput\n              id=\"frepayment\"\n              name=\"frepayment\"\n              value={repayment}\n              changed={setRepayment}\n              suffix=\"%\"\n            />\n            <small id=\"fbuyingcosts-help\" className=\"p-d-block\">\n              &nbsp;\n            </small>\n          </div>\n          <div className=\"p-field p-col-12 p-md-3 p-grid\">\n            <label htmlFor=\"fcondoFee\">Hausgeld</label>\n            <CurrencyInput\n              id=\"fcondoFee\"\n              name=\"fcondoFee\"\n              value={condoFee}\n              changed={setCondoFee}\n            />\n            <small id=\"fbuyingcosts-help\" className=\"p-d-block\">\n              &nbsp;\n            </small>\n          </div>\n          <div className=\"p-field p-col-12 p-md-3 p-grid\">\n            <label htmlFor=\"frentIndex\">Mietspiegel €/m²</label>\n            <CurrencyInput\n              id=\"frentIndex\"\n              name=\"frentIndex\"\n              value={rentIndex}\n              changed={e => {\n                setRentIndex(e);\n                if (livingSpace > 0) {\n                  setRent(livingSpace * e);\n                }\n              }}\n            />\n            <small id=\"fbuyingcosts-help\" className=\"p-d-block\">\n              &nbsp;\n            </small>\n          </div>\n          <div className=\"p-field p-col-12 p-md-3 p-grid\">\n            <label htmlFor=\"frent\">Mieteinnahmen / Monat</label>\n            <CurrencyInput\n              id=\"frent\"\n              name=\"frent\"\n              value={rent}\n              changed={e => {\n                setRent(e);\n                if (livingSpace > 0) {\n                  setRentIndex(e / livingSpace);\n                }\n              }}\n            />\n            <small id=\"fbuyingcosts-help\" className=\"p-d-block\">\n              &nbsp;\n            </small>\n          </div>\n          <div className=\"p-field p-col-12 p-md-3 p-grid\">\n            <label htmlFor=\"flivingSpace\">Wohnfläche</label>\n            <CurrencyInput\n              id=\"flivingSpace\"\n              name=\"flivingSpace\"\n              value={livingSpace}\n              changed={e => {\n                setLivingSpace(e);\n                if (rent > 0) {\n                  setRentIndex(rent / e);\n                } else if (rentIndex > 0) {\n                  setRent(e * rentIndex);\n                }\n              }}\n              suffix=\"m²\"\n            />\n            <small id=\"fbuyingcosts-help\" className=\"p-d-block\">\n              &nbsp;\n            </small>\n          </div>\n          <div className=\"p-field p-col-12 p-md-3 p-grid\">\n            <label htmlFor=\"ftotalamount\">Gesamtsumme</label>\n            <CurrencyInput\n              id=\"ftotalamount\"\n              name=\"ftotalamount\"\n              value={calcGrandTotalBuying(price, provision, buyingcosts)}\n              changed={null}\n            />\n            <small id=\"fbuyingcosts-help\" className=\"p-d-block\">\n              &nbsp;\n            </small>\n          </div>\n        </div>\n        <Fieldset legend=\"Ergebnis\">\n          <div className=\"p-fluid p-formgrid p-grid\">\n            <div className=\"p-field p-col-12 p-md-3 p-grid\">\n              <label htmlFor=\"fpriceperspace\">€ / m²</label>\n              <CurrencyInput\n                id=\"fpriceperspace\"\n                name=\"fpriceperspace\"\n                value={calcPricePerSQM(price, livingSpace)}\n                changed={null}\n              />\n              <small id=\"fbuyingcosts-help\" className=\"p-d-block\">\n                &nbsp;\n              </small>\n            </div>\n            <div className=\"p-field p-col-12 p-md-3 p-grid\">\n              <label htmlFor=\"finterestPerMonth\">Zinsen / Monat</label>\n              <CurrencyInput\n                id=\"finterestPerMonth\"\n                name=\"finterestPerMonth\"\n                value={calcInterestPerMonthAmt(\n                  calcGrandTotalBuying(price, provision, buyingcosts),\n                  interest\n                )}\n                changed={null}\n              />\n              <small id=\"fbuyingcosts-help\" className=\"p-d-block\">\n                &nbsp;\n              </small>\n            </div>\n            <div className=\"p-field p-col-12 p-md-3 p-grid\">\n              <label htmlFor=\"frepaymentPerMonth\">Tilgung / Monat</label>\n              <CurrencyInput\n                id=\"frepaymentPerMonth\"\n                name=\"frepaymentPerMonth\"\n                value={calcRepaymentPerMonthAmt(\n                  calcGrandTotalBuying(price, provision, buyingcosts),\n                  repayment\n                )}\n                changed={null}\n              />\n              <small id=\"fbuyingcosts-help\" className=\"p-d-block\">\n                &nbsp;\n              </small>\n            </div>\n            <div className=\"p-field p-col-12 p-md-3 p-grid\">\n              <label htmlFor=\"fmonthlyCosts\">Kosten / Monat</label>\n              <CurrencyInput\n                id=\"fmonthlyCosts\"\n                name=\"fmonthlyCosts\"\n                value={\n                  calcRepaymentPerMonthAmt(\n                    calcGrandTotalBuying(price, provision, buyingcosts),\n                    repayment\n                  ) +\n                  calcInterestPerMonthAmt(\n                    calcGrandTotalBuying(price, provision, buyingcosts),\n                    interest\n                  ) +\n                  condoFee\n                }\n                changed={null}\n              />\n              <small id=\"fmonthlyCosts-help\" className=\"p-d-block\">\n                {`Ohne NK: ${formatCurrency(\n                  calcInterestPerMonthAmt(\n                    calcGrandTotalBuying(price, provision, 0),\n                    interest\n                  ) +\n                    calcRepaymentPerMonthAmt(\n                      calcGrandTotalBuying(price, provision, 0),\n                      repayment\n                    ) +\n                    condoFee\n                )}`}\n                <br />\n                {`Ohne Hausgeld: ${formatCurrency(\n                  calcInterestPerMonthAmt(\n                    calcGrandTotalBuying(price, provision, 0),\n                    interest\n                  ) +\n                    calcRepaymentPerMonthAmt(\n                      calcGrandTotalBuying(price, provision, 0),\n                      repayment\n                    )\n                )}`}\n              </small>\n            </div>\n            <div className=\"p-field p-col-12 p-md-3 p-grid\">\n              <label htmlFor=\"fmonthlyCostsInvest\">\n                Kosten / Monat (Anlage)\n              </label>\n              <CurrencyInput\n                id=\"fmonthlyCostsInvest\"\n                name=\"fmonthlyCostsInvest\"\n                value={\n                  rentIndex && rentIndex > 0\n                    ? calcRepaymentPerMonthAmt(\n                        calcGrandTotalBuying(price, provision, buyingcosts),\n                        repayment\n                      ) +\n                      calcInterestPerMonthAmt(\n                        calcGrandTotalBuying(price, provision, buyingcosts),\n                        interest\n                      ) +\n                      condoFee -\n                      rentIndex * livingSpace\n                    : calcRepaymentPerMonthAmt(\n                        calcGrandTotalBuying(price, provision, buyingcosts),\n                        repayment\n                      ) +\n                      calcInterestPerMonthAmt(\n                        calcGrandTotalBuying(price, provision, buyingcosts),\n                        interest\n                      ) +\n                      condoFee -\n                      rent\n                }\n                changed={null}\n              />\n              <small id=\"fmonthlyCostsInvest-help\" className=\"p-d-block\">\n                {`${calcRendite()} % - `}\n                {parseFloat(\n                  rentIndex && rentIndex > 0\n                    ? calcRepaymentPerMonthAmt(\n                        calcGrandTotalBuying(price, provision, buyingcosts),\n                        repayment\n                      ) +\n                        calcInterestPerMonthAmt(\n                          calcGrandTotalBuying(price, provision, buyingcosts),\n                          interest\n                        ) +\n                        condoFee -\n                        rentIndex * livingSpace\n                    : calcRepaymentPerMonthAmt(\n                        calcGrandTotalBuying(price, provision, buyingcosts),\n                        repayment\n                      ) +\n                        calcInterestPerMonthAmt(\n                          calcGrandTotalBuying(price, provision, buyingcosts),\n                          interest\n                        ) +\n                        condoFee -\n                        rent\n                ) > 0 ? (\n                  <span className=\"text-red\">Verlust</span>\n                ) : parseFloat(\n                    rentIndex && rentIndex > 0\n                      ? calcRepaymentPerMonthAmt(\n                          calcGrandTotalBuying(price, provision, buyingcosts),\n                          repayment\n                        ) +\n                          calcInterestPerMonthAmt(\n                            calcGrandTotalBuying(price, provision, buyingcosts),\n                            interest\n                          ) +\n                          condoFee -\n                          rentIndex * livingSpace\n                      : calcRepaymentPerMonthAmt(\n                          calcGrandTotalBuying(price, provision, buyingcosts),\n                          repayment\n                        ) +\n                          calcInterestPerMonthAmt(\n                            calcGrandTotalBuying(price, provision, buyingcosts),\n                            interest\n                          ) +\n                          condoFee -\n                          rent\n                  ) < 0 ? (\n                  <span className=\"text-green\">Gewinn</span>\n                ) : (\n                  <span />\n                )}\n              </small>\n            </div>\n          </div>\n          <span className=\"p-buttonset\">\n            <Button\n              label=\"Miete vorschlagen\"\n              icon=\"pi pi-dollar\"\n              onClick={proposeRent}\n            />\n            <a href=\"https://www.sparkasse.de/service/rechner/nebenkostenrechner.html\">\n              <Button label=\"SPK NK Rechner\" />\n            </a>\n          </span>\n          <a\n            className=\"bmcButton\"\n            target=\"_blank\"\n            href=\"https://www.buymeacoffee.com/Robs\"\n          >\n            <img\n              className=\"bmcButtonImg\"\n              src=\"https://cdn.buymeacoffee.com/buttons/bmc-new-btn-logo.svg\"\n              alt=\"Kauf mir einen Kaffee\"\n            />\n            <span style={{ marginLeft: 15, fontSize: 19 }}>\n              Kauf mir einen Kaffee\n            </span>\n          </a>\n        </Fieldset>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default injectIntl(App);\n","export const parseImmoScout = url => {\n\treturn `parsed ${url}!`;\n};\n","import \"primereact/resources/themes/saga-blue/theme.css\";\nimport \"primereact/resources/primereact.min.css\";\nimport \"primeicons/primeicons.css\";\nimport \"primeflex/primeflex.css\";\nimport \"./index.css\";\n\nimport * as de from \"react-intl/locale-data/de\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { IntlProvider, addLocaleData } from \"react-intl\";\n\nimport App from \"./App\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\naddLocaleData([...de]);\n\nReactDOM.render(\n\t<Router>\n\t\t<IntlProvider locale=\"de\">\n\t\t\t<App />\n\t\t</IntlProvider>\n\t</Router>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}